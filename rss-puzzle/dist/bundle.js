(()=>{"use strict";var e={921:(e,t,n)=>{n.r(t)},223:(e,t,n)=>{n.r(t)},227:(e,t,n)=>{n.r(t)},597:(e,t,n)=>{n.r(t)},266:(e,t,n)=>{n.r(t)},284:(e,t,n)=>{n.r(t)},514:function(e,t,n){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(990));n(921);const o=function(){const e=document.createElement("header");e.classList.add("header"),e.innerHTML="\n  <nav class='navigation'>\n    <button class='logout'>Logout<span class='pic'></span></button>\n  </nav>";const t=e.querySelector(".logout");return null==t||t.addEventListener("click",(()=>{document.body.append(a.default)})),e}();t.default=o},1:function(e,t,n){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=n(997),o=r(n(807));n(223);const s=n(956);t.default=function(){const e=document.createElement("form");e.classList.add("form"),e.innerHTML="\n    <label><input class='input' type='text' name='name' class='first_name' placeholder=\"First name\" required /></label>\n    <label><input class='input' type='text' name='surname' class='surname' placeholder=\"Surname\" required /></label>\n    <button class='btn_login'>Sign in</button>\n  ";const t=e.querySelectorAll(".input");return(0,s.nameListener)(t[0]),(0,s.surnameListener)(t[1]),e.addEventListener("submit",(e=>{e.preventDefault();const n=t[0],r=t[1];o.default.dispatch((0,a.saveLoginAction)({firstName:n.value,surname:r.value}))})),e}},956:(e,t,n)=>{function r(e){return!1===/^[A-Z]/.test(e)}function a(e){return!1===/^[A-Za-z\-]+$/.test(e)}function o(e){return!1===/[A-Za-z].{2,}/.test(e)}function s(e){return!1===/[A-Za-z].{3,}/.test(e)}function u(){const e=document.querySelector(".error");null==e||e.remove()}Object.defineProperty(t,"__esModule",{value:!0}),t.surnameListener=t.nameListener=t.deleteTextError=t.checklengthSurname=t.checklengthName=t.checkHyphen=t.checkLetters=void 0,n(223),t.checkLetters=r,t.checkHyphen=a,t.checklengthName=o,t.checklengthSurname=s,t.deleteTextError=u,t.nameListener=function(e){e.addEventListener("change",(()=>{e.value&&(e.setAttribute("pattern","-?(?=.*^[A-Z])(?=.*[a-z]+$)(?=.*[A-Za-z]).{3,}"),r(e.value)?(u(),e.insertAdjacentHTML("beforebegin",'<p class="error">Первая заглавная, все буквы из английского алфавита</p>')):a(e.value)?(u(),e.insertAdjacentHTML("beforebegin",'<p class="error">Допустимые символы "-"</p>')):o(e.value)?(u(),e.insertAdjacentHTML("beforebegin",'<p class="error">Минимальная длина строки 3 символа</p>')):document.querySelectorAll(".error").forEach((e=>{e.remove()})))}))},t.surnameListener=function(e){e.addEventListener("change",(()=>{e.value&&(e.setAttribute("pattern","-?(?=.*^[A-Z])(?=.*[a-z]+$)(?=.*[A-Za-z]).{4,}"),r(e.value)?(u(),e.insertAdjacentHTML("beforebegin",'<p class="error">Первая заглавная, все буквы из английского алфавита</p>')):a(e.value)?(u(),e.insertAdjacentHTML("beforebegin",'<p class="error">Допустимые символы "-"</p>')):s(e.value)?(u(),e.insertAdjacentHTML("beforebegin",'<p class="error">Минимальная длина строки 4 символа</p>')):document.querySelectorAll(".error").forEach((e=>{e.remove()})))}))}},990:function(e,t,n){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=n(997),o=r(n(807));n(227);const s=function(){const e=document.createElement("div");e.classList.add("modalOverlay"),e.innerHTML="\n    <div class='modal'>\n        <h2 class='text'>Are you sure you want to logout?</h2>\n        <div class='btns'>\n            <button class='btnModal yesBtn'>Yes</button>\n            <button class='btnModal noBtn'>No</button>\n        </div>\n    </div>\n  ";const t=e.querySelector(".yesBtn"),n=e.querySelector(".noBtn");return null==n||n.addEventListener("click",(()=>{e.remove()})),null==t||t.addEventListener("click",(()=>{const t=document.querySelector(".header");o.default.dispatch((0,a.logoutAction)()),e.remove(),null==t||t.remove()})),e}();t.default=s},950:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),n(597),t.default=function(){const e=document.createElement("main");return e.classList.add("container"),e.innerHTML="\n      <div class='play-box'>Playground</div>\n    ",e}},160:function(e,t,n){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=n(997),o=r(n(807));n(266),t.default=function(){const{firstName:e,surname:t}=o.default.getState(),n=document.createElement("div");n.classList.add("box"),n.innerHTML=`\n    <h1 class='title'>English Puzzle</h1>\n    <span class='galaxy'></span>\n    <p class='greeting'>Hello, ${e} ${t}!</p>\n    <p class='description'>Click on words, collect phrases. Words can be drag and drop. <br/>Select tooltips in the menu.</p>\n    <button class='startBtn'>Start<span class='play'></span></button>\n  `;const r=n.querySelector(".startBtn");return null==r||r.addEventListener("click",(()=>{o.default.dispatch((0,a.startGameAction)())})),n}},156:function(e,t,n){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),n(284);const a=r(n(807)),o=n(997),s=r(n(1)),u=r(n(514)),c=r(n(160)),l=r(n(950));a.default.subscribe((function(){const e=a.default.getState();""===e.firstName?(document.body.innerHTML="",document.body.append((0,s.default)())):(document.body.innerHTML="",document.body.append(u.default),document.body.append((0,c.default)())),e.startGame&&(document.body.innerHTML="",document.body.append(u.default),document.body.append((0,l.default)()))})),a.default.dispatch((0,o.initStateAction)()),alert("Пожалуйста, проверьте мою работу в последний день дедлайна! =)")},997:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.startGameAction=t.logoutAction=t.saveLoginAction=t.initStateAction=void 0;const r=n(865);t.initStateAction=()=>{const e=localStorage.getItem("form"),t=e?JSON.parse(e):{firstName:"",surname:""};return{type:r.INIT_STATE,payload:t}},t.saveLoginAction=({firstName:e,surname:t})=>{const n=JSON.stringify({firstName:e,surname:t});return localStorage.setItem("form",n),{type:r.SAVE_LOGIN,payload:{firstName:e,surname:t}}},t.logoutAction=()=>(localStorage.removeItem("form"),{type:r.LOGOUT}),t.startGameAction=()=>({type:r.START_GAME})},865:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.START_GAME=t.LOGOUT=t.INIT_STATE=t.SAVE_LOGIN=void 0,t.SAVE_LOGIN="SAVE_LOGIN",t.INIT_STATE="INIT_STATE",t.LOGOUT="LOGOUT",t.START_GAME="START_GAME"},23:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0});const r=n(997);t.default=(e,t)=>{let n=e(t,(0,r.initStateAction)());const a=[];return{dispatch(t){n=e(n,t),a.forEach((e=>e()))},subscribe(e){a.push(e)},getState:()=>n}}},710:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.rootReducer=t.initialState=void 0;const r=n(865);t.initialState={firstName:"",surname:"",startGame:!1},t.rootReducer=(e=t.initialState,n)=>{switch(n.type){case r.LOGOUT:return Object.assign({},t.initialState);case r.INIT_STATE:case r.SAVE_LOGIN:return Object.assign(Object.assign({},e),{firstName:n.payload.firstName,surname:n.payload.surname,startGame:!1});case r.START_GAME:return Object.assign(Object.assign({},e),{startGame:!0});default:return e}}},807:function(e,t,n){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(23)),o=n(710),s=(0,a.default)(o.rootReducer);t.default=s}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var o=t[r]={exports:{}};return e[r].call(o.exports,o,o.exports,n),o.exports}n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n(156)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,